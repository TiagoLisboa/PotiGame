tipo Caixa
  var x, y, l, h: Real
	noroeste =  Ponto(x, y)
	nordeste =  Ponto(x + l , y)
	suldoeste = Ponto(x, y + h)
	suldeste = Ponto(x + l, y + h)

	get_caixa()=[nordeste, noroeste, suldeste, suldoeste]

	checar_posicao (mapa: Mapa, simu: Caixa)
		var venceu := falso
		pos = [simu.noroeste, simu.nordeste, simu.suldoeste, simu.suldeste]

		var check = [verdadeiro, verdadeiro, verdadeiro, verdadeiro].mutável

		para i de 1 até check.tamanho faça
				posX = (pos[i].x / 32).inteiro + 1
				posY = (pos[i].y / 32).inteiro * mapa.largura
				pos_ar = posX + posY
			se
				pos_ar >= 1 e pos_ar <= mapa.largura * mapa.altura e
				pos[i].x >= 1 e pos[i].x <= mapa.largura * 32 e
				pos[i].y >= 1 e pos[i].y <= mapa.altura * 32
			então
				check[i] := mapa.foreground[pos_ar.inteiro] == 2
				venceu := mapa.foreground[pos_ar.inteiro] == 3
			fim
		fim

		colisao = Colisao(check[1], check[2], check[3], check[4])

		retorne Tupla(colisao.colidiu, venceu)
	fim
fim
