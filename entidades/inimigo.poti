tipo Inimigo
	var x, y: Real
	var l, h: Inteiro
	var sprite: Imagem
	var mapa: Mapa
	vel = 50
	var caixa_colisao = Caixa(
			Ponto(x, y), 
			Ponto(x + l, y),
			Ponto(x, y + h),
			Ponto(x + l, y + h))

	iniciar() fim

	checar_colisao(box: Caixa)
		var retorno = falso
		para i em box.get_caixa faça
			se 
				i.x > caixa_colisao.noroeste.x e
				i.x < caixa_colisao.nordeste.x e
				i.x > caixa_colisao.suldoeste.x e
				i.x < caixa_colisao.suldeste.x e
				i.y > caixa_colisao.noroeste.y e
				i.y > caixa_colisao.nordeste.y e
				i.y < caixa_colisao.suldoeste.y e
				i.y < caixa_colisao.suldeste.y
			então
				retorno := verdadeiro
			fim
		fim

		retorne retorno
	fim

	prox_pos()
		var teste = [
			[1, 1],
			[1, -1],
			[-1, 1],
			[-1, -1]
		]

		retorne teste[aleatório(1,4)]
	fim

	desenhar() 
		sprite.desenhe(x, y, 3)
	fim

	atualizar(ds: Real, player: Jogador) 
		teste = prox_pos
		var nx = 0.0 + teste[1]
		var ny = 0.0 + teste[2]

		var colidiu = caixa_colisao.checar_posicao(mapa, Caixa(
			Ponto(x + nx, y + ny), 
			Ponto(x + nx + l, y + ny),
			Ponto(x + nx, y + ny + h),
			Ponto(x + nx + l, y + ny + h)))

		se colidiu == falso então
			colidiu := player.checar_colisao(Caixa(
											Ponto(x + nx, y + ny), 
											Ponto(x + nx + l, y + ny),
											Ponto(x + nx, y + ny + h),
											Ponto(x + nx + l, y + ny + h)))
		fim

		se 
			colidiu == falso
		então
			x := x + nx
			y := y + ny
		senão
			nx := 0.0
			ny := 0.0
		fim

		caixa_colisao := Caixa(
			Ponto(x, y), 
			Ponto(x + l, y),
			Ponto(x, y + h),
			Ponto(x + l, y + h))

	fim
fim